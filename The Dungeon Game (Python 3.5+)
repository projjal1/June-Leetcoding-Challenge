class Solution:
    def travel(self,cost,dungeon,row,col,m,n,a):
        if row==m-1 and col==n-1:
            total=cost+dungeon[row][col]
            if total<=0:
                a[0]=max(a[0],total)
            return 
        if row>m-1 or col>n-1:
            return 
        
        print(row,col)
        cost+=dungeon[row][col]
        self.travel(cost,dungeon,row,col+1,m,n,a)
        self.travel(cost,dungeon,row+1,col,m,n,a)

    def calculateMinimumHP(self, dungeon):
        m, n = len(dungeon), len(dungeon[0])
        a=[-99999999999]
        if m!=1 or n!=1:
            self.travel(0,dungeon,0,0,m,n,a)
            print(a[0])
            return (a[0]*-1+1)
        else:
            if dungeon[0][0]>0:
                return 1
            else:
                return dungeon[0][0]*-1 +1 
